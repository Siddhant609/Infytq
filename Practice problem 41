#PF-Prac-41
def get_edges(pollsters_stateedge_dict,state):
    new_dict = {}
    for state in pollsters_stateedge_dict: # or data.keys()
        state_lst = []
        for state1 in pollsters_stateedge_dict[state]: # or data[poll].keys()
             state_lst.append(state1)
             new_dict[state] = state_lst
    return new_dict

def find_pollster_states(pollsters_stateedge_dict):
    wa_results = []
    for pollster in pollsters_stateedge_dict: # or data.keys()
        if 'WA' in pollsters_stateedge_dict[pollster]: # or data[pollster].keys()
            edge = pollsters_stateedge_dict[pollster]['WA']
            t = (pollster,edge)
            wa_results.append(t)
        else:
            edge = None
            tup = (pollster, edge)
            wa_results.append(tup)
    return wa_results

pollsters_stateedge_dict = { 
              "Gallup": { "WA": 7, "CA": 15, "UT": -30 }, 
              "SurveyUSA": { "CA": 14, "CO": 2, "CT": 13, "FL": 0 }, 
              "Omniscient": { "AK": -14.0, "WA": -2.3, "CA": 20.9 }
             } 
state='WA'
print("Pollsters, States and its edge details:",pollsters_stateedge_dict)
print("Given State:",state)
output=get_edges(pollsters_stateedge_dict,state)
print("Pollster Edge details for the given state:", output)  

output1=find_pollster_states(pollsters_stateedge_dict)
print("Pollster and their entire state details:",output1)
